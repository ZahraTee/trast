{"version":3,"sources":["ColorUtils.js","ColorInput.js","App.js","serviceWorker.js","index.js"],"names":["calculateLuminance","r","g","b","a","map","v","Math","pow","hslToRgb","h","s","l","hueToRgb","p","q","t","rgbToHex","toHex","x","hex","round","toString","length","concat","ColorInput","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","changeHSL","bind","assertThisInitialized","state","hue","initialHue","saturation","initialSaturation","brightness","initialBrightness","rgb","_rgb","slicedToArray","hslToHex","stylesheet","document","documentElement","style","setProperty","target","_this2","react_default","createElement","className","class","onClick","navigator","clipboard","writeText","id","name","type","min","max","value","onChange","event","_event$target","Number","formattedValue","newState","_hslToRgb","_hslToRgb2","setState","onColorChange","Component","App","hslText","hslBackground","contrast","pangram","getRandomPangram","onBackgroundColorChange","onTextColorChange","_this$state","version","y","width","height","viewBox","enable-background","fill","d","stringifyContrast","resultForContrast","ColorInput_ColorInput","href","contrastString","toFixed","endsWith","slice","hsl1","hsl2","rgb1","rgb2","luminance1","luminance2","calculateContrast","random","Boolean","window","location","hostname","match","ReactDOM","render","src_App","getElementById","serviceWorker","ready","then","registration","unregister"],"mappings":"sPAYA,SAASA,EAAmBC,EAAGC,EAAGC,GAChC,IAAMC,EAAI,CAACH,EAAGC,EAAGC,GAAGE,IAAI,SAAAC,GACtB,OAAOA,GAAK,OAAUA,EAAI,MAAQC,KAAKC,KAAKF,EAAI,MAAS,MAAO,OAElE,MAAc,MAAPF,EAAE,GAAqB,MAAPA,EAAE,GAAqB,MAAPA,EAAE,GAGpC,SAASK,EAASC,EAAGC,EAAGC,GAI7B,IAAIX,EAAGC,EAAGC,EACV,GAJAO,GAAK,IAELE,GAAK,IAEK,KAHVD,GAAK,KAIHV,EAAIC,EAAIC,EAAIS,MACP,CACL,IAAMC,EAAW,SAACC,EAAGC,EAAGC,GAOtB,OANIA,EAAI,IACNA,GAAK,GAEHA,EAAI,IACNA,GAAK,GAEHA,EAAI,EAAI,EACHF,EAAc,GAATC,EAAID,GAASE,EAEvBA,EAAI,GACCD,EAELC,EAAI,EAAI,EACHF,GAAKC,EAAID,IAAM,EAAI,EAAIE,GAAK,EAE9BF,GAEHC,EAAIH,EAAI,GAAMA,GAAK,EAAID,GAAKC,EAAID,EAAIC,EAAID,EACxCG,EAAI,EAAIF,EAAIG,EAClBd,EAAIY,EAASC,EAAGC,EAAGL,EAAI,EAAI,GAC3BR,EAAIW,EAASC,EAAGC,EAAGL,GACnBP,EAAIU,EAASC,EAAGC,EAAGL,EAAI,EAAI,GAE7B,MAAO,CAACT,EAAGC,EAAGC,GAGT,SAASc,EAAShB,EAAGC,EAAGC,GAC7B,IAAMe,EAAQ,SAAAC,GACZ,IAAMC,EAAMb,KAAKc,MAAU,IAAJF,GAASG,SAAS,IACzC,OAAsB,IAAfF,EAAIG,OAAe,IAAMH,EAAMA,GAExC,UAAAI,OAAWN,EAAMjB,IAAjBuB,OAAsBN,EAAMhB,IAA5BsB,OAAiCN,EAAMf,QCxDpBsB,cACnB,SAAAA,EAAYC,GAAO,IAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACjBE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,QACKI,UAAYP,EAAKO,UAAUC,KAAfP,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAAD,KACjBA,EAAKU,MAAQ,CACXC,IAAKZ,EAAMa,WACXC,WAAYd,EAAMe,kBAClBC,WAAYhB,EAAMiB,kBAClBvB,IDmDC,SAAkBV,EAAGC,EAAGC,GAC7B,IAAMgC,EAAMnC,EAASC,EAAGC,EAAGC,GADKiC,EAAAjB,OAAAkB,EAAA,EAAAlB,CAEdgB,EAFc,GAGhC,OAAO3B,EAHyB4B,EAAA,GAAAA,EAAA,GAAAA,EAAA,ICnDvBE,CACHrB,EAAMa,WACNb,EAAMe,kBACNf,EAAMiB,oBAIV,IAAMK,EAAaC,SAASC,gBAAgBC,MAd3B,OAejBH,EAAWI,YAAX,KAAA5B,OAA4BE,EAAM2B,OAAlC,QAAgD3B,EAAMa,YACtDS,EAAWI,YAAX,KAAA5B,OACOE,EAAM2B,OADb,kBAAA7B,OAEKE,EAAMe,kBAFX,MAIAO,EAAWI,YAAX,KAAA5B,OACOE,EAAM2B,OADb,kBAAA7B,OAEKE,EAAMiB,kBAFX,MApBiBhB,wEA0BV,IAAA2B,EAAAxB,KACP,OACEyB,EAAAnD,EAAAoD,cAAA,OAAKC,UAAU,eACbF,EAAAnD,EAAAoD,cAAA,OAAKC,UAAU,kBACXF,EAAAnD,EAAAoD,cAAA,QAAME,MAAM,iBAAiB5B,KAAKJ,MAAM2B,QACxCE,EAAAnD,EAAAoD,cAAA,UAAQC,UAAU,MAAME,QAAS,kBAAMC,UAAUC,UAAUC,UAAUR,EAAKjB,MAAMjB,OAC/EU,KAAKO,MAAMjB,MAGhBmC,EAAAnD,EAAAoD,cAAA,OAAKC,UAAU,WACbF,EAAAnD,EAAAoD,cAAA,SAAOC,UAAU,YAAjB,OACAF,EAAAnD,EAAAoD,cAAA,SAAOC,UAAU,SAAjB,GAAAjC,OAA6BM,KAAKO,MAAMC,IAAxC,SACAiB,EAAAnD,EAAAoD,cAAA,SACEO,GAAG,MACHC,KAAK,MACLC,KAAK,QACLC,IAAI,IACJC,IAAI,MACJC,MAAOtC,KAAKO,MAAMC,IAClB+B,SAAUvC,KAAKI,aAGnBqB,EAAAnD,EAAAoD,cAAA,OAAKC,UAAU,WACbF,EAAAnD,EAAAoD,cAAA,SAAOC,UAAU,YAAjB,cACAF,EAAAnD,EAAAoD,cAAA,SAAOC,UAAU,SAAS3B,KAAKO,MAAMG,YACrCe,EAAAnD,EAAAoD,cAAA,SACEO,GAAG,aACHC,KAAK,aACLC,KAAK,QACLC,IAAI,IACJC,IAAI,MACJC,MAAOtC,KAAKO,MAAMG,WAClB6B,SAAUvC,KAAKI,aAGnBqB,EAAAnD,EAAAoD,cAAA,OAAKC,UAAU,WACbF,EAAAnD,EAAAoD,cAAA,SAAOC,UAAU,YAAjB,cACAF,EAAAnD,EAAAoD,cAAA,SAAOC,UAAU,SAAS3B,KAAKO,MAAMK,YACrCa,EAAAnD,EAAAoD,cAAA,SACEO,GAAG,aACHC,KAAK,aACLC,KAAK,QACLC,IAAI,IACJC,IAAI,MACJC,MAAOtC,KAAKO,MAAMK,WAClB2B,SAAUvC,KAAKI,gDAOfoC,GAAO,IAAAC,EACKD,EAAMjB,OAApBe,EADSG,EACTH,MAAOL,EADEQ,EACFR,GACbK,EAAQI,OAAOJ,GAEf,IAAMK,EAAwB,QAAPV,EAAA,GAAAvC,OAAkB4C,EAAlB,KAA6BA,EAC9CM,EAAW,GACjBA,EAASX,GAAMK,EAEf,IAAM9B,EAAa,QAAPyB,EAAeK,EAAQtC,KAAKO,MAAMC,IACxCE,EAAoB,eAAPuB,EAAsBK,EAAQtC,KAAKO,MAAMG,WACtDE,EAAoB,eAAPqB,EAAsBK,EAAQtC,KAAKO,MAAMK,WAV7CiC,EAYGlE,EAAS6B,EAAKE,EAAYE,GAZ7BkC,EAAAhD,OAAAkB,EAAA,EAAAlB,CAAA+C,EAAA,GAYR1E,EAZQ2E,EAAA,GAYL1E,EAZK0E,EAAA,GAYFzE,EAZEyE,EAAA,GAcfF,EAAStD,IAAMH,EAAShB,EAAGC,EAAGC,GAC9B2B,KAAK+C,SAASH,GACd5C,KAAKJ,MAAMoD,cAAcxC,EAAKE,EAAYE,GAE1CO,SAASC,gBAAgBC,MAAMC,YAA/B,KAAA5B,OACOM,KAAKJ,MAAM2B,OADlB,KAAA7B,OAC4BuC,GAC1BU,UAnGkCM,aC0HzBC,cAxHb,SAAAA,IAAc,IAAArD,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAkD,IACZrD,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAoD,GAAA/C,KAAAH,QAEKO,MAAQ,CACX4C,QAAS,CAAC,EAAG,GAAI,KACjBC,cAAe,CAAC,EAAG,EAAG,GACtBC,SAAU,GACVC,QAASzD,EAAK0D,oBAGhB1D,EAAKmD,cAAgBnD,EAAKmD,cAAc3C,KAAnBP,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAAD,KACrBA,EAAK2D,wBAA0B3D,EAAK2D,wBAAwBnD,KAA7BP,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAAD,KAC/BA,EAAK4D,kBAAoB5D,EAAK4D,kBAAkBpD,KAAvBP,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAAD,KAZbA,wEAeL,IAAA6D,EACuB1D,KAAKO,MAA3B8C,EADDK,EACCL,SAAUC,EADXI,EACWJ,QAClB,OACE7B,EAAAnD,EAAAoD,cAAA,OAAKC,UAAU,OACbF,EAAAnD,EAAAoD,cAAA,OAAKC,UAAU,QACbF,EAAAnD,EAAAoD,cAAA,OAAKC,UAAU,QACbF,EAAAnD,EAAAoD,cAAA,OACEiC,QAAQ,MACR1B,GAAG,OACH5C,EAAE,MACFuE,EAAE,MACFC,MAAM,MACNC,OAAO,MACPC,QAAQ,YACRC,oBAAkB,iBAElBvC,EAAAnD,EAAAoD,cAAA,QACEO,GAAG,QACHgC,KAAK,UACLC,EAAE,2FAEJzC,EAAAnD,EAAAoD,cAAA,QACEO,GAAG,QACHiC,EAAE,uGAlBR,UAwBFzC,EAAAnD,EAAAoD,cAAA,OAAKC,UAAU,QACbF,EAAAnD,EAAAoD,cAAA,QAAMC,UAAU,UAAU0B,GAAY,EAAI,OAAS,QACnD5B,EAAAnD,EAAAoD,cAAA,QAAMC,UAAU,SAAS3B,KAAKmE,kBAAkBd,IAChD5B,EAAAnD,EAAAoD,cAAA,QAAMC,UAAU,SAAS3B,KAAKoE,kBAAkBf,KAElD5B,EAAAnD,EAAAoD,cAAA,OAAKC,UAAU,QAAQ2B,GACvB7B,EAAAnD,EAAAoD,cAAA,OAAKC,UAAU,gBACbF,EAAAnD,EAAAoD,cAAC2C,EAAD,CACE9C,OAAO,aACPd,WAAY,EACZE,kBAAmB,GACnBE,kBAAmB,EACnBmC,cAAehD,KAAKwD,0BAEtB/B,EAAAnD,EAAAoD,cAAC2C,EAAD,CACE9C,OAAO,OACPd,WAAY,EACZE,kBAAmB,GACnBE,kBAAmB,IACnBmC,cAAehD,KAAKyD,qBAGxBhC,EAAAnD,EAAAoD,cAAA,OAAKC,UAAU,UAAf,uBACiBF,EAAAnD,EAAAoD,cAAA,KAAG4C,KAAK,kCAAR,SADjB,OACwE,IACtE7C,EAAAnD,EAAAoD,cAAA,KAAG4C,KAAK,0BAAR,qDAMUjB,GAChB,IAAMkB,EAAiBlB,EAASmB,QAAQ,GACxC,OAAID,EAAeE,SAAS,KAC1B,GAAA/E,OAAU6E,EAAeG,MAAM,GAAI,GAAnC,MAEF,GAAAhF,OAAU6E,EAAV,gDAGgBlB,GAChB,OAAIA,GAAY,EACP,MACEA,GAAY,IACd,KACEA,GAAY,EACd,gBADF,wCAKKsB,EAAMC,GAClB,IAAMvB,EFlGH,SAA2BsB,EAAMC,GACtC,IAAMC,EAAOlG,EAASgG,EAAK,GAAIA,EAAK,GAAIA,EAAK,IACvCG,EAAOnG,EAASiG,EAAK,GAAIA,EAAK,GAAIA,EAAK,IAEvCG,EAAa7G,EAAmB2G,EAAK,GAAIA,EAAK,GAAIA,EAAK,IACvDG,EAAa9G,EAAmB4G,EAAK,GAAIA,EAAK,GAAIA,EAAK,IAI7D,OAHgBrG,KAAK4D,IAAI0C,EAAYC,GAGnB,MAFHvG,KAAK2D,IAAI2C,EAAYC,GAEA,KEyFjBC,CAAkBN,EAAMC,GACzC5E,KAAK+C,SAAS,CAAEM,SAAUA,oDAGJzE,EAAGC,EAAGC,GAC5BkB,KAAK+C,SAAS,CAAEK,cAAe,CAACxE,EAAGC,EAAGC,KACtCkB,KAAKgD,cAAchD,KAAKO,MAAM4C,QAAS,CAACvE,EAAGC,EAAGC,8CAG9BF,EAAGC,EAAGC,GACtBkB,KAAK+C,SAAS,CAAEI,QAAS,CAACvE,EAAGC,EAAGC,KAChCkB,KAAKgD,cAAc,CAACpE,EAAGC,EAAGC,GAAIkB,KAAKO,MAAM6C,0DAYzC,MARiB,CACf,uCACA,6CACA,6CACA,iDAGmB3E,KAAKc,MAAsB,EAAhBd,KAAKyG,kBApHvBjC,aCMEkC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCVNC,IAASC,OAAOhE,EAAAnD,EAAAoD,cAACgE,EAAD,MAASvE,SAASwE,eAAe,SDmH3C,kBAAmB7D,WACrBA,UAAU8D,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.e8494a4a.chunk.js","sourcesContent":["export function calculateContrast(hsl1, hsl2) {\n  const rgb1 = hslToRgb(hsl1[0], hsl1[1], hsl1[2]);\n  const rgb2 = hslToRgb(hsl2[0], hsl2[1], hsl2[2]);\n\n  const luminance1 = calculateLuminance(rgb1[0], rgb1[1], rgb1[2]);\n  const luminance2 = calculateLuminance(rgb2[0], rgb2[1], rgb2[2]);\n  const lighter = Math.max(luminance1, luminance2);\n  const darker = Math.min(luminance1, luminance2);\n\n  return (lighter + 0.05) / (darker + 0.05);\n}\n\nfunction calculateLuminance(r, g, b) {\n  const a = [r, g, b].map(v => {\n    return v <= 0.03928 ? v / 12.92 : Math.pow((v + 0.055) / 1.055, 2.4);\n  });\n  return a[0] * 0.2126 + a[1] * 0.7152 + a[2] * 0.0722;\n}\n\nexport function hslToRgb(h, s, l) {\n  h /= 360;\n  s /= 100;\n  l /= 100;\n  let r, g, b;\n  if (s === 0) {\n    r = g = b = l; // achromatic\n  } else {\n    const hueToRgb = (p, q, t) => {\n      if (t < 0) {\n        t += 1;\n      }\n      if (t > 1) {\n        t -= 1;\n      }\n      if (t < 1 / 6) {\n        return p + (q - p) * 6 * t;\n      }\n      if (t < 1 / 2) {\n        return q;\n      }\n      if (t < 2 / 3) {\n        return p + (q - p) * (2 / 3 - t) * 6;\n      }\n      return p;\n    };\n    const q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n    const p = 2 * l - q;\n    r = hueToRgb(p, q, h + 1 / 3);\n    g = hueToRgb(p, q, h);\n    b = hueToRgb(p, q, h - 1 / 3);\n  }\n  return [r, g, b];\n}\n\nexport function rgbToHex(r, g, b) {\n  const toHex = x => {\n    const hex = Math.round(x * 255).toString(16);\n    return hex.length === 1 ? \"0\" + hex : hex;\n  };\n  return `#${toHex(r)}${toHex(g)}${toHex(b)}`;\n}\n\nexport function hslToHex(h, s, l) {\n  const rgb = hslToRgb(h, s, l);\n  const [r, g, b] = rgb;\n  return rgbToHex(r, g, b);\n}\n","import React, { Component } from \"react\";\nimport { hslToRgb, rgbToHex, hslToHex } from './ColorUtils.js';\n\nexport default class ColorInput extends Component {\n  constructor(props) {\n    super();\n    this.changeHSL = this.changeHSL.bind(this);\n    this.state = {\n      hue: props.initialHue,\n      saturation: props.initialSaturation,\n      brightness: props.initialBrightness,\n      hex: hslToHex(\n        props.initialHue,\n        props.initialSaturation,\n        props.initialBrightness\n      )\n    };\n\n    const stylesheet = document.documentElement.style;\n    stylesheet.setProperty(`--${props.target}_hue`, props.initialHue);\n    stylesheet.setProperty(\n      `--${props.target}_saturation`,\n      `${props.initialSaturation}%`\n    );\n    stylesheet.setProperty(\n      `--${props.target}_brightness`,\n      `${props.initialBrightness}%`\n    );\n  }\n\n  render() {\n    return (\n      <div className=\"color-input\">\n        <div className=\"control-header\">\n            <span class=\"selector-name\">{this.props.target}</span>\n            <button className=\"hex\" onClick={() => navigator.clipboard.writeText(this.state.hex)}>\n            {this.state.hex}\n            </button>\n        </div>\n        <div className=\"control\">\n          <label className=\"property\">Hue</label>\n          <label className=\"value\">{`${this.state.hue}°`}</label>\n          <input\n            id=\"hue\"\n            name=\"hue\"\n            type=\"range\"\n            min=\"0\"\n            max=\"360\"\n            value={this.state.hue}\n            onChange={this.changeHSL}\n          />\n        </div>\n        <div className=\"control\">\n          <label className=\"property\">Saturation</label>\n          <label className=\"value\">{this.state.saturation}</label>\n          <input\n            id=\"saturation\"\n            name=\"saturation\"\n            type=\"range\"\n            min=\"0\"\n            max=\"100\"\n            value={this.state.saturation}\n            onChange={this.changeHSL}\n          />\n        </div>\n        <div className=\"control\">\n          <label className=\"property\">Brightness</label>\n          <label className=\"value\">{this.state.brightness}</label>\n          <input\n            id=\"brightness\"\n            name=\"brightness\"\n            type=\"range\"\n            min=\"0\"\n            max=\"100\"\n            value={this.state.brightness}\n            onChange={this.changeHSL}\n          />\n        </div>\n      </div>\n    );\n  }\n\n  changeHSL(event) {\n    let { value, id } = event.target;\n    value = Number(value);\n\n    const formattedValue = id !== \"hue\" ? `${value}%` : value;\n    const newState = {};\n    newState[id] = value;\n\n    const hue = id === \"hue\" ? value : this.state.hue;\n    const saturation = id === \"saturation\" ? value : this.state.saturation;\n    const brightness = id === \"brightness\" ? value : this.state.brightness;\n\n    const [r, g, b] = hslToRgb(hue, saturation, brightness);\n\n    newState.hex = rgbToHex(r, g, b);\n    this.setState(newState);\n    this.props.onColorChange(hue, saturation, brightness);\n\n    document.documentElement.style.setProperty(\n      `--${this.props.target}_${id}`,\n      formattedValue\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport ColorInput from \"./ColorInput\";\nimport { calculateContrast } from \"./ColorUtils.js\";\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      hslText: [0, 50, 100],\n      hslBackground: [0, 0, 0],\n      contrast: 21,\n      pangram: this.getRandomPangram()\n    };\n\n    this.onColorChange = this.onColorChange.bind(this);\n    this.onBackgroundColorChange = this.onBackgroundColorChange.bind(this);\n    this.onTextColorChange = this.onTextColorChange.bind(this);\n  }\n\n  render() {\n    const { contrast, pangram } = this.state;\n    return (\n      <div className=\"App\">\n        <div className=\"info\">\n          <div className=\"logo\">\n            <svg\n              version=\"1.1\"\n              id=\"icon\"\n              x=\"0px\"\n              y=\"0px\"\n              width=\"0px\"\n              height=\"0px\"\n              viewBox=\"0 0 32 32\"\n              enable-background=\"new 0 0 32 32\"\n            >\n              <path\n                id=\"half1\"\n                fill=\"#FFFFFF\"\n                d=\"M27.335,4.708c6.249,6.249,6.248,16.379,0,22.627c-6.249,6.249-16.378,6.249-22.627,0.001\"\n              />\n              <path\n                id=\"half2\"\n                d=\"M27.335,4.708c-6.364-6.364-16.379-6.249-22.627,0c-6.248,6.249-6.363,16.263,0,22.628L27.335,4.708z\"\n              />\n            </svg>\n            TRAST\n          </div>\n        </div>\n        <div className=\"info\">\n          <span className=\"result\">{contrast >= 3 ? \"Pass\" : \"Fail\"}</span>\n          <span className=\"ratio\">{this.stringifyContrast(contrast)}</span>\n          <span className=\"grade\">{this.resultForContrast(contrast)}</span>\n        </div>\n        <div className=\"info\">{pangram}</div>\n        <div className=\"color-inputs\">\n          <ColorInput\n            target=\"background\"\n            initialHue={0}\n            initialSaturation={50}\n            initialBrightness={0}\n            onColorChange={this.onBackgroundColorChange}\n          />\n          <ColorInput\n            target=\"text\"\n            initialHue={0}\n            initialSaturation={50}\n            initialBrightness={100}\n            onColorChange={this.onTextColorChange}\n          />\n        </div>\n        <div className=\"footer\">\n          Made with ♥ by <a href=\"https://www.zahratraboulsi.com\">Zahra</a> and{\" \"}\n          <a href=\"https://syeefkarim.com\">Syeef</a>\n        </div>\n      </div>\n    );\n  }\n\n  stringifyContrast(contrast) {\n    const contrastString = contrast.toFixed(1);\n    if (contrastString.endsWith(\"0\")) {\n      return `${contrastString.slice(0, -2)}:1`;\n    }\n    return `${contrastString}:1`;\n  }\n\n  resultForContrast(contrast) {\n    if (contrast >= 7) {\n      return \"AAA\";\n    } else if (contrast >= 4.5) {\n      return \"AA\";\n    } else if (contrast >= 3) {\n      return \"AA Large\";\n    }\n  }\n\n  onColorChange(hsl1, hsl2) {\n    const contrast = calculateContrast(hsl1, hsl2);\n    this.setState({ contrast: contrast });\n  }\n\n  onBackgroundColorChange(h, s, l) {\n    this.setState({ hslBackground: [h, s, l] });\n    this.onColorChange(this.state.hslText, [h, s, l]);\n  }\n\n  onTextColorChange(h, s, l) {\n    this.setState({ hslText: [h, s, l] });\n    this.onColorChange([h, s, l], this.state.hslBackground);\n  }\n\n  getRandomPangram() {\n    const pangrams = [\n      \"How quickly daft jumping zebras vex.\",\n      \"Go, lazy fat vixen; be shrewd, jump quick.\",\n      \"Fix problems quickly with galvanized jets.\",\n      \"Pack my red box with five dozen quality jugs.\"\n    ];\n\n    const pangramIndex = Math.round(Math.random() * 3);\n    return pangrams[pangramIndex];\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}